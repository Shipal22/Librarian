<!DOCTYPE html>
<html>

<head>
    <title>Multi Barcode Scanner</title>
    <script src="https://unpkg.com/quagga@0.12.1/dist/quagga.min.js"></script>
    <style>
        #scanner-container {
            width: 640px;
            height: 480px;
            border: 2px solid #ccc;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);
            margin: 20px auto;
        }

        #isbn-output {

            text-align: center;
            font-family: sans-serif;
            font-size: 18px;
        }
    </style>
</head>

<body>
    <a href="/<%=adm_no%>/mainpage">Go back to home</a>
    <h2 style="text-align:center;">Scan book Barcode</h2>
    <div id="scanner-container"></div>
    <div style=" text-align: center;">
        <div id="isbn-output">Waiting for scan... </div>
    </div>
    <div class="books_">
        <div class="Name">Book ----- Author------</div>
        <button class="done">Done</button>
        <button class="ano_book" disabled="disabled">Another book</button>
    </div>

    <script>
        let lastScanned = null;
        let lastScanTime = 0;
        const debounceDelay = 2000;
        let currentCode = null;
        let currentname = null;
        let currenttitle = null;

        Quagga.init({
            inputStream: {
                type: "LiveStream",
                target: document.querySelector('#scanner-container'),
                constraints: {
                    facingMode: "environment"
                }
            },
            decoder: {
                readers: ["ean_reader"]
            }
        }, function (err) {
            if (err) {
                console.error(err);
                return;
            }
            console.log("Quagga initialized");
            Quagga.start();
        });

        Quagga.onDetected(data => {
            const code = data.codeResult.code;
            const now = Date.now();

            if (code === lastScanned && (now - lastScanTime) < debounceDelay) return;

            lastScanned = code;
            lastScanTime = now;
            currentCode = code;
            // console.log("Detected Barcode:", code);
            document.getElementById("isbn-output").innerText = "Scanned: " + code;
            book_print(code);
        });

        const apiurl = "https://openlibrary.org/isbn/";
        const json = ".json";
       

        async function book_print(code) {
            try {
                const book_detail = await fetch(apiurl+code+json);
                const data = await book_detail.json();

                let authorName = "Unknown author";

            if (data.authors && data.authors.length > 0) {
                const authorResponse = await fetch(`https://openlibrary.org${data.authors[0].key}.json`);
                const authorData = await authorResponse.json();
                authorName = authorData.name;
            }
            const title = data.title;
                document.querySelector(".Name").innerHTML = `${title} by ${authorName}`;
                 currentname = authorName;
                 currenttitle = title;
                Quagga.stop();
            } catch (error) {
                console.error("Error fetching book details:", error);
                document.querySelector(".Name").innerHTML = "Book not found. Please Scan again..... <a href='/<%=adm_no%>/borrow'>Try again...</a>";
            }
        }


        document.querySelector(".done").addEventListener("click", () => {
            if (!currentCode) {
                alert("No book scanned!");
                return;
            }

            fetch('/<%=adm_no%>/submit-barcode', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ code: currentCode, format: "auto",book_name :currenttitle ,book_author :currentname})
            })
                .then(res => res.text())
                .then(msg => {
                    // console.log("Server response:", msg);
                    document.querySelector(".Name").innerHTML = "Book Added";
                    document.querySelector(".done").disabled = true;
                    document.querySelector(".ano_book").disabled = false;
                })
                .catch(err => {
                    console.error("Submit error:", err);
                });
        });

        document.querySelector(".ano_book").addEventListener("click", () => {
            location.reload();
        });
    </script>


</body>

</html>